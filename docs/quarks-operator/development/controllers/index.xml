<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quarks Project – Kubernetes Controllers</title>
    <link>https://quarks.suse.dev/docs/quarks-operator/development/controllers/</link>
    <description>Recent content in Kubernetes Controllers on Quarks Project</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://quarks.suse.dev/docs/quarks-operator/development/controllers/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: BOSH Deployment</title>
      <link>https://quarks.suse.dev/docs/quarks-operator/development/controllers/bosh_deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://quarks.suse.dev/docs/quarks-operator/development/controllers/bosh_deployment/</guid>
      <description>
        
        
        &lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;A BOSH deployment is created from a deployment manifest and optionally ops files.&lt;/p&gt;
&lt;p&gt;The deployment manifest is based on a vanilla BOSH deployment manifest.
The ops files modify the deployment manifest. For example, ops files can be used to replace release tarballs with &lt;a href=&#34;https://ci.flintstone.cf.cloud.ibm.com/teams/containerization/pipelines/release-images&#34;&gt;docker images&lt;/a&gt;, thus enabling deployment on Kubernetes.&lt;/p&gt;
&lt;p&gt;A deployment is represented by the &lt;code&gt;boshdeployments.quarks.cloudfoundry.org&lt;/code&gt; (&lt;code&gt;bdpl&lt;/code&gt;) custom resource, defined in &lt;a href=&#34;https://github.com/cloudfoundry-incubator/cf-operator/tree/master/docs/crds/quarks_v1alpha1_boshdeployment_crd.yaml&#34;&gt;&lt;code&gt;boshdeployment_crd.yaml&lt;/code&gt;&lt;/a&gt;.
This &lt;a href=&#34;https://github.com/cloudfoundry-incubator/cf-operator/tree/master/docs/examples/bosh-deployment/boshdeployment.yaml&#34;&gt;bdpl custom resource&lt;/a&gt; contains references to config maps or secrets containing the actual manifests content.&lt;/p&gt;
&lt;p&gt;The name of the &lt;code&gt;bdpl&lt;/code&gt; resource is the &lt;a href=&#34;https://bosh.io/docs/manifest-v2/#deployment&#34;&gt;deployment name&lt;/a&gt;. The name in the BOSH manifest is ignored.&lt;/p&gt;
&lt;p&gt;After creating the &lt;code&gt;bdpl&lt;/code&gt; resource on Kubernetes, i.e. via &lt;code&gt;kubectl apply&lt;/code&gt;, the CF operator will start reconciliation, which will eventually result in the deployment
of the BOSH release on Kubernetes.&lt;/p&gt;
&lt;h2 id=&#34;bdpl-component&#34;&gt;BDPL Component&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;BOSHDeployment&lt;/strong&gt; component is a categorization of a set of controllers, under the same group. Inside the &lt;strong&gt;BDPL&lt;/strong&gt; component we have a set of 3 controllers together with one separate reconciliation loop per controller to deal with &lt;code&gt;BOSH deployments&lt;/code&gt;(end user input)&lt;/p&gt;
&lt;p&gt;Figure 1 is a &lt;strong&gt;BDPL&lt;/strong&gt; component diagram that covers the set of controllers it uses and their relationship with other components(e.g. &lt;code&gt;QuarksJob&lt;/code&gt;, &lt;code&gt;QuarksSecret&lt;/code&gt; and &lt;code&gt;QuarksStatefulSet&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../quarks_bdplcomponent_flow.png&#34; alt=&#34;bdpl-component-flow&#34;&gt;
&lt;em&gt;Fig. 1: The BOSHDeployment component&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Figure 1 illustrates a couple of things. Firstly, at the very top, we have the &lt;code&gt;cf-operator&lt;/code&gt; , which is a long running application with a namespaced scope. When the &lt;code&gt;cf-operator&lt;/code&gt; pod is initialized it will automatically register all controllers with the &lt;a href=&#34;https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/&#34;&gt;Kubernetes Controller Manager&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While at a first glance the above diagram looks complex, it can be explained easily by focusing on each controller´s main functions: &lt;code&gt;Reconciliation &amp;amp; Watch&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;_boshdeployment-controller_&#34;&gt;&lt;strong&gt;&lt;em&gt;BOSHDeployment Controller&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../quarks_bdplcontroller_flow.png&#34; alt=&#34;bdpl-controller-flow&#34;&gt;
&lt;em&gt;Fig. 2: The BOSHDeployment controller&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is the controller that manages the end user input(a BOSH manifest).&lt;/p&gt;
&lt;h4 id=&#34;watches-in-bdpl-controller&#34;&gt;Watches in BDPL controller&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BOSHDeployment&lt;/code&gt;: Create&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ConfigMaps&lt;/code&gt;: Update&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Secrets&lt;/code&gt;: Create and Update&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;reconciliation-in-bdpl-controller&#34;&gt;Reconciliation in BDPL controller&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;generates &lt;code&gt;.with-ops&lt;/code&gt; secret, that contains the deployment manifest, with all ops files applied&lt;/li&gt;
&lt;li&gt;generates &lt;code&gt;variable interpolation&lt;/code&gt; &lt;a href=&#34;https://github.com/cloudfoundry-incubator/quarks-job/tree/master/README.md#one-off-jobs-auto-errands&#34;&gt;&lt;strong&gt;QuarksJob&lt;/strong&gt;&lt;/a&gt; resource&lt;/li&gt;
&lt;li&gt;generates &lt;code&gt;data gathering&lt;/code&gt; &lt;strong&gt;QuarksJob&lt;/strong&gt; resource&lt;/li&gt;
&lt;li&gt;generates &lt;code&gt;BPM configuration&lt;/code&gt; &lt;strong&gt;QuarksJob&lt;/strong&gt; resource&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;highlights-in-bdpl-controller&#34;&gt;Highlights in BDPL controller&lt;/h4&gt;
&lt;p&gt;Transform the concepts of BOSH into Kubernetes resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BOSH &lt;code&gt;errands&lt;/code&gt; to &lt;code&gt;QuarksJob&lt;/code&gt; CRD instances&lt;/li&gt;
&lt;li&gt;BOSH &lt;code&gt;instance_groups&lt;/code&gt; to &lt;code&gt;QuarksStatefulSet&lt;/code&gt; CRD instances&lt;/li&gt;
&lt;li&gt;BOSH &lt;code&gt;variables&lt;/code&gt; to &lt;code&gt;QuarksSecret&lt;/code&gt; CRD instance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the three created &lt;em&gt;QuarksJob&lt;/em&gt; instances will eventually persist their STDOUT into new secrets under the same namespace.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The output of the &lt;a href=&#34;https://github.com/cloudfoundry-incubator/cf-operator/tree/master/docs/commands/cf-operator_util_variable-interpolation.md&#34;&gt;&lt;code&gt;variable interpolation&lt;/code&gt;&lt;/a&gt; &lt;strong&gt;QuarksJob&lt;/strong&gt; ends up as the &lt;code&gt;.desired-manifest-v1&lt;/code&gt; &lt;strong&gt;secret&lt;/strong&gt;, which is a versioned secret. At the same time this secret serves as the input for the &lt;code&gt;data gathering&lt;/code&gt; &lt;strong&gt;QuarksJob&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The output of the &lt;a href=&#34;https://github.com/cloudfoundry-incubator/cf-operator/tree/master/docs/commands/cf-operator_util_instance-group.md&#34;&gt;&lt;code&gt;data gathering&lt;/code&gt;&lt;/a&gt; &lt;strong&gt;QuarksJob&lt;/strong&gt;, ends up
as the &lt;code&gt;.ig-resolved.&amp;lt;instance_group_name&amp;gt;-v1&lt;/code&gt; versioned secret.&lt;/li&gt;
&lt;li&gt;The output of the &lt;code&gt;BPM configuration&lt;/code&gt; &lt;strong&gt;QuarksJob&lt;/strong&gt;, ends up as the &lt;code&gt;bpm.&amp;lt;instance_group_name&amp;gt;-v1&lt;/code&gt; versioned secret.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;_generate-variables-controller_&#34;&gt;&lt;strong&gt;&lt;em&gt;Generate Variables Controller&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../quarks_gvariablecontroller_flow.png&#34; alt=&#34;quarks_gvariablecontroller_flow.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 3: The Generated Variables controller&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is the controller that is responsible for auto-generating certificates, passwords and other secrets declared in the manifest. In other words, it translates all BOSH variables into custom Kubernetes primitive resources. It does this with the help of &lt;code&gt;QuarksSecrets&lt;/code&gt;. It watches the &lt;code&gt;.with-ops&lt;/code&gt; secret, retrieves the list of BOSH variables and triggers the generation of &lt;code&gt;QuarksSecrets&lt;/code&gt; per item in that list.&lt;/p&gt;
&lt;h4 id=&#34;watches-in-gv-controller&#34;&gt;Watches in GV controller&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Secrets&lt;/code&gt;: Create and Update.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;reconciliation-in-gv-controller&#34;&gt;Reconciliation in GV controller&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;generates &lt;code&gt;QuarksSecrets&lt;/code&gt; resources.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;highlights-in-gv-controller&#34;&gt;Highlights in GV controller&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;secrets&lt;/code&gt; resources,  generated by these &lt;code&gt;QuarksSecrets&lt;/code&gt; are referenced by the &lt;code&gt;variable interpolation&lt;/code&gt; &lt;strong&gt;QuarksJob&lt;/strong&gt;. When these secrets are created/updated, the variable interpolation QuarksJob is run.&lt;/p&gt;
&lt;h3 id=&#34;_bpm-controller_&#34;&gt;&lt;strong&gt;&lt;em&gt;BPM Controller&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../quarks_bpm-controller_flow.png&#34; alt=&#34;bpm-controller-flow&#34;&gt;
&lt;em&gt;Fig. 4: The BPM controller&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The BPM controller has the responsibility to generate Kubernetes resources per &lt;code&gt;instance_group&lt;/code&gt;. It is triggered for each &lt;code&gt;instance_group&lt;/code&gt; in the desired manifest, since we generate one BPM Secret for each. The reconciler starts each &lt;code&gt;instance_group&lt;/code&gt; as its corresponding secret is created. It &lt;em&gt;does not wait&lt;/em&gt; for all secrets to be ready.&lt;/p&gt;
&lt;h4 id=&#34;watches-in-bpm-controller&#34;&gt;Watches in BPM controller&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cloudfoundry-incubator/quarks-job/blob/master/docs/quarksjob.md#versioned-secrets&#34;&gt;&lt;code&gt;versioned secrets&lt;/code&gt;&lt;/a&gt;: Create and Update.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;reconciliation-in-bpm-controller&#34;&gt;Reconciliation in BPM controller&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Render BPM resources per &lt;code&gt;instance_group&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Convert &lt;code&gt;instance_groups&lt;/code&gt; of the type &lt;code&gt;services&lt;/code&gt; to &lt;code&gt;QuarksStafulSet&lt;/code&gt; resources.&lt;/li&gt;
&lt;li&gt;Convert &lt;code&gt;instance_groups&lt;/code&gt; of the type &lt;code&gt;errand&lt;/code&gt; to &lt;code&gt;QuarksJob&lt;/code&gt; resources.&lt;/li&gt;
&lt;li&gt;Generates Kubernetes services that will expose ports for the &lt;code&gt;instance_groups&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Generate require PVC´s.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;highlights-in-bpm-controller&#34;&gt;Highlights in BPM controller&lt;/h4&gt;
&lt;p&gt;The &lt;strong&gt;Secrets&lt;/strong&gt; watched by the BPM Reconciler are &lt;a href=&#34;https://github.com/cloudfoundry-incubator/quarks-job/blob/master/docs/quarksjob.md#versioned-secrets&#34;&gt;Versioned Secrets&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Resources are &lt;em&gt;applied&lt;/em&gt; using an &lt;strong&gt;upsert technique&lt;/strong&gt; &lt;a href=&#34;https://godoc.org/sigs.k8s.io/controller-runtime/pkg/controller/controllerutil#CreateOrUpdate&#34;&gt;implementation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Any resources that are no longer required are deleted.&lt;/p&gt;
&lt;p&gt;As the &lt;code&gt;BOSHDeployment&lt;/code&gt; is deleted, all owned resources are automatically deleted in a cascading fashion.&lt;/p&gt;
&lt;p&gt;Persistent volumes are left behind.&lt;/p&gt;
&lt;h2 id=&#34;bdpl-abstract-view&#34;&gt;BDPL Abstract view&lt;/h2&gt;
&lt;p&gt;Figure 5 is a diagram that explains the whole &lt;code&gt;BOSHDeployment&lt;/code&gt; component controllers flow, in a more high level perspective.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.google.com/drawings/d/e/2PACX-1vTsCO5USd8AJIk_uHMRKl0NABuW85uVGJNebNvgI0Hz_9jhle6fcynLTcHh8cxW6lMgaV_DWyPEvm2-/pub?w=3161&amp;amp;h=2376&#34; alt=&#34;deployment-state&#34;&gt;
&lt;a href=&#34;https://docs.google.com/drawings/d/126ExNqPxDg1LcB14pbtS5S-iJzLYPyXZ5Jr9vTfFqXA/edit?usp=sharing&#34;&gt;edit&lt;/a&gt;
&lt;em&gt;Fig. 5: The BOSHDeployment component controllers interactions&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;boshdeployment-resource-examples&#34;&gt;BOSHDeployment resource examples&lt;/h2&gt;
&lt;p&gt;See &lt;a href=&#34;https://github.com/cloudfoundry-incubator/cf-operator/tree/master/docs/examples/bosh-deployment&#34;&gt;https://github.com/cloudfoundry-incubator/cf-operator/tree/master/docs/examples/bosh-deployment&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;boshdeployment-status&#34;&gt;BOSHDeployment status&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;BOSHDeployment&lt;/code&gt; status is resolved by a &lt;a href=&#34;https://github.com/cloudfoundry-incubator/quarks-operator/blob/c6480811376faf81d6edadb62fcd0c7951e173c1/pkg/kube/controllers/boshdeployment/status_reconciler.go&#34;&gt;separate controller&lt;/a&gt; which tracks the status of &lt;code&gt;QuarksJob&lt;/code&gt; and &lt;code&gt;QuarksStatefulSet&lt;/code&gt; associated with a deployment.
The controller annotates the instance groups and the jobs counters and it resolves the BDPL State (&lt;code&gt;Deployed&lt;/code&gt;, &lt;code&gt;Converting&lt;/code&gt; , &lt;code&gt;Resolving&lt;/code&gt;) by looking at the associated resources states and computing the overall state.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;BOSHDeployment&lt;/code&gt; status spec is composed of the following fields:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// BOSHDeploymentStatus defines the observed state of BOSHDeployment
&lt;/span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;type&lt;/span&gt; BOSHDeploymentStatus &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;struct&lt;/span&gt; {
	&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// Timestamp for the last reconcile
&lt;/span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;	LastReconcile          *metav1.Time &lt;span style=&#34;color:#ed9d13&#34;&gt;`json:&amp;#34;lastReconcile&amp;#34;`&lt;/span&gt;
	State                  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;string&lt;/span&gt;       &lt;span style=&#34;color:#ed9d13&#34;&gt;`json:&amp;#34;state&amp;#34;`&lt;/span&gt;
	Message                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;string&lt;/span&gt;       &lt;span style=&#34;color:#ed9d13&#34;&gt;`json:&amp;#34;message&amp;#34;`&lt;/span&gt;
	TotalJobCount          &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;int&lt;/span&gt;          &lt;span style=&#34;color:#ed9d13&#34;&gt;`json:&amp;#34;totalJobCount&amp;#34;`&lt;/span&gt;
	CompletedJobCount      &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;int&lt;/span&gt;          &lt;span style=&#34;color:#ed9d13&#34;&gt;`json:&amp;#34;completedJobCount&amp;#34;`&lt;/span&gt;
	TotalInstanceGroups    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;int&lt;/span&gt;          &lt;span style=&#34;color:#ed9d13&#34;&gt;`json:&amp;#34;totalInstanceGroups&amp;#34;`&lt;/span&gt;
	DeployedInstanceGroups &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;int&lt;/span&gt;          &lt;span style=&#34;color:#ed9d13&#34;&gt;`json:&amp;#34;deployedInstanceGroups&amp;#34;`&lt;/span&gt;
	StateTimestamp         *metav1.Time &lt;span style=&#34;color:#ed9d13&#34;&gt;`json:&amp;#34;stateTimestamp&amp;#34;`&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;BOSHDeployment&lt;/code&gt; States can be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Created&lt;/li&gt;
&lt;li&gt;Converting to Kubernetes Resources&lt;/li&gt;
&lt;li&gt;Resolving Manifest&lt;/li&gt;
&lt;li&gt;Deployed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;where &amp;ldquo;Deployed&amp;rdquo; is the final state. Note that during deployments, the lifecycle might vary if the same resources are updated subsequently: the status of a &lt;code&gt;BOSHDeployment&lt;/code&gt; may go back from &lt;code&gt;Deployed&lt;/code&gt; to &lt;code&gt;Converting&lt;/code&gt; and &lt;code&gt;Resolving&lt;/code&gt; again if updates to the manifest are triggered.&lt;/p&gt;
&lt;p&gt;The Reconcile resolves to the Deployed state by looking at the overall counts of &lt;code&gt;QuarksJobs&lt;/code&gt; and &lt;code&gt;QuarksStatefulSet&lt;/code&gt; associated to the &lt;code&gt;BOSHDeployment&lt;/code&gt; and its state:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Converting&lt;/code&gt;: All &lt;code&gt;QuarksJobs&lt;/code&gt; belonging to a &lt;code&gt;BOSHDeployment&lt;/code&gt; are completed, but &lt;code&gt;QuarksStatefulSet&lt;/code&gt; aren&amp;rsquo;t ready yet ( or either way around )&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Resolving&lt;/code&gt;: &lt;code&gt;QuarksJobs&lt;/code&gt; belonging to a &lt;code&gt;BOSHDeployment&lt;/code&gt; aren&amp;rsquo;t completed, &lt;code&gt;QuarksStatefulSet&lt;/code&gt; aren&amp;rsquo;t ready yet&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Deployed&lt;/code&gt;: All &lt;code&gt;QuarksJobs&lt;/code&gt; and &lt;code&gt;QuarksStatefulSet&lt;/code&gt; are ready/completed.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Quarks restart</title>
      <link>https://quarks.suse.dev/docs/quarks-operator/development/controllers/quarks_restart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://quarks.suse.dev/docs/quarks-operator/development/controllers/quarks_restart/</guid>
      <description>
        
        
        &lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;The QuarksRestart controller is responsible for restarting kubernetes resources such as &lt;code&gt;StatefulSet&lt;/code&gt; and &lt;code&gt;Deployment&lt;/code&gt;. They are restarted whenever a secret referenced by these resources gets updated.&lt;/p&gt;
&lt;p&gt;This feature also enables updating entangled pods whenever the link secrets get updated.&lt;/p&gt;
&lt;h4 id=&#34;watches-in-quarks-restart-controller&#34;&gt;Watches in Quarks Restart Controller&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Secret&lt;/code&gt;: Restart pods that have the annotation &lt;code&gt;quarks.cloudfoundry.org/restart-on-update&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;reconciliation-in-quarks-restart-controller&#34;&gt;Reconciliation in Quarks Restart Controller&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;adds restart annotation &lt;code&gt;quarks.cloudfoundry.org/restart&lt;/code&gt; to &lt;code&gt;StatefulSet&lt;/code&gt; or &lt;code&gt;Deployment&lt;/code&gt; as appropriate.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;quarksrestart-examples&#34;&gt;&lt;code&gt;QuarksRestart&lt;/code&gt; Examples&lt;/h2&gt;
&lt;p&gt;See &lt;a href=&#34;https://github.com/cloudfoundry-incubator/cf-operator/tree/master/docs/examples/quarks-restart&#34;&gt;https://github.com/cloudfoundry-incubator/cf-operator/tree/master/docs/examples/quarks-restart&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
